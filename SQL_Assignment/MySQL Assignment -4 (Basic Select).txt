MySQL Assignment -3 (Basic Select)


1. Write a query to display the names (first_name, last_name) using alias
name â€œFirst Name", "Last Name.


mysql> Select first_name as ' First Name ',last_name as ' Last Name '
    -> from employee;
+-------------+------------+
| First Name  | Last Name  |
+-------------+------------+
| Steven      | King       |
| Neena       | Kochhar    |
| Lex         | De Haan    |
| Alexander   | Hunold     |
| Bruce       | Ernst      |
| David       | Austin     |
| Valli       | Pataballa  |
| Diana       | Lorentz    |
| Nancy       | Greenberg  |
| Daniel      | Faviet     |
| Raju        | Nalbalwar  |
| Rutika      | Vaidya     |
| Akki        | Swami      |
+-------------+------------+
13 rows in set, 2 warnings (0.02 sec)


2. Write a query to get unique department ID from employee table.

mysql> select DISTINCT department_id
    -> from employee;
+---------------+
| department_id |
+---------------+
|            10 |
|            30 |
|            60 |
|            80 |
+---------------+
4 rows in set (0.01 sec)


3. Write a query to get all employee details from the employee table order
by first name, descending

mysql> select * from employee
    -> order by first_name desc;
+-------------+------------+-----------+---------------+--------------+------------+---------+--------+------------+------------+---------------+
| employee_id | first_name | last_name | email         | phone_number | hire_date  | job_id  | salary | commission | manager_id | department_id |
+-------------+------------+-----------+---------------+--------------+------------+---------+--------+------------+------------+---------------+
|         106 | Valli      | Pataballa | NOT AVAILABLE | 590.423.4560 | 1987-06-23 | IT_PROG |   5280 |    5028.00 |        103 |            60 |
|         100 | Steven     | King      | NOT AVAILABLE | 515.123.4567 | 1987-06-17 | AD_PRES |  26400 |    5140.00 |        200 |            10 |
|         111 | Rutika     | Vaidya    | NOT AVAILABLE | 8723765423   | 2023-08-08 | SA_MAN  |  25300 |    5030.00 |        145 |            80 |
|         110 | Raju       | Nalbalwar | NOT AVAILABLE | 2345987609   | 2024-04-01 | IT_PROG |  29700 |    7470.00 |        103 |            60 |
|         101 | Neena      | Kochhar   | NOT AVAILABLE | 515.123.4568 | 1987-06-18 | AD_VP   |  18700 |    4370.00 |        200 |            10 |
|         108 | Nancy      | Greenberg | NOT AVAILABLE | 515.124.4569 | 1987-06-25 | SA_MAN  |  13200 |    1420.00 |        145 |            80 |
|         102 | Lex        | De Haan   | NOT AVAILABLE | 515.123.4569 | 1987-06-19 | AD_VP   |  18700 |    1970.00 |        200 |            10 |
|         107 | Diana      | Lorentz   | NOT AVAILABLE | 590.423.5567 | 1987-06-24 | IT_PROG |   4620 |     562.00 |        114 |            30 |
|         105 | David      | Austin    | NOT AVAILABLE | 590.423.4569 | 1987-06-22 | IT_PROG |   5280 |     628.00 |        103 |            60 |
|         109 | Daniel     | Faviet    | NOT AVAILABLE | 515.124.4169 | 1987-06-26 | SA_MAN  |   9900 |    3490.00 |        145 |            80 |
|         104 | Bruce      | Ernst     | NOT AVAILABLE | 590.423.4568 | 1987-06-21 | IT_PROG |   6600 |    5160.00 |        103 |            60 |
|         103 | Alexander  | Hunold    | NOT AVAILABLE | 590.423.4567 | 1987-06-20 | IT_PROG |   9900 |    1090.00 |        103 |            60 |
|         112 | Akki       | Swami     | NOT AVAILABLE | 6725715728   | 2021-04-07 | IT_PROG |  27500 |       NULL |        103 |            60 |
+-------------+------------+-----------+---------------+--------------+------------+---------+--------+------------+------------+---------------+
13 rows in set (0.03 sec)


4. Write a query to get the names (first_name, last_name), salary, PF of all
the employees (PF is calculated as 15% of salary).

mysql> select  first_name ,last_name ,salary ,salary * 0.15 as PF
    -> from employee;
+------------+-----------+--------+------+
| first_name | last_name | salary | PF   |
+------------+-----------+--------+------+
| Steven     | King      |  26400 | 3960 |
| Neena      | Kochhar   |  18700 | 2805 |
| Lex        | De Haan   |  18700 | 2805 |
| Alexander  | Hunold    |   9900 | 1485 |
| Bruce      | Ernst     |   6600 |  990 |
| David      | Austin    |   5280 |  792 |
| Valli      | Pataballa |   5280 |  792 |
| Diana      | Lorentz   |   4620 |  693 |
| Nancy      | Greenberg |  13200 | 1980 |
| Daniel     | Faviet    |   9900 | 1485 |
| Raju       | Nalbalwar |  29700 | 4455 |
| Rutika     | Vaidya    |  25300 | 3795 |
| Akki       | Swami     |  27500 | 4125 |
+------------+-----------+--------+------+
13 rows in set (0.03 sec)


5. Write a query to get the, names (first_name, last_name),
salary in ascending order of salary.

mysql> select employee_id,CONCAT(first_name,' ',last_name) as Names,salary from employee
    -> order by salary desc ;
+-------------+------------------+--------+
| employee_id | Names            | salary |
+-------------+------------------+--------+
|         110 | Raju Nalbalwar   |  29700 |
|         112 | Akki Swami       |  27500 |
|         100 | Steven King      |  26400 |
|         111 | Rutika Vaidya    |  25300 |
|         101 | Neena Kochhar    |  18700 |
|         102 | Lex De Haan      |  18700 |
|         108 | Nancy Greenberg  |  13200 |
|         103 | Alexander Hunold |   9900 |
|         109 | Daniel Faviet    |   9900 |
|         104 | Bruce Ernst      |   6600 |
|         105 | David Austin     |   5280 |
|         106 | Valli Pataballa  |   5280 |
|         107 | Diana Lorentz    |   4620 |
+-------------+------------------+--------+
13 rows in set (0.00 sec)



6. Write a query to get the total salaries payable to employees.

mysql> select sum(salary) as Total_Salary
    -> from employee;
+--------------+
| Total_Salary |
+--------------+
|       201080 |
+--------------+
1 row in set (0.03 sec)


7. Write a query to get the maximum and minimum salary from employees
table.

mysql> select max(salary) as MAX_Salary , min(salary) as MIN_Salary
    -> from employee;
+------------+------------+
| MAX_Salary | MIN_Salary |
+------------+------------+
|      29700 |       4620 |
+------------+------------+
1 row in set (0.03 sec)


8. Write a query to get the average salary and number of employees in the
employees table.

mysql> SELECT AVG(salary) AS "Average Salary",
    ->        COUNT(employee_id) AS "Number of Employees"
    -> FROM employee;
+--------------------+---------------------+
| Average Salary     | Number of Employees |
+--------------------+---------------------+
| 15467.692307692309 |                  13 |
+--------------------+---------------------+
1 row in set (0.01 sec)


9. Write a query to get the number of employees working with the
company.


mysql> SELECT d.department_name,
    ->        COUNT(e.department_id) AS count_employee
    -> FROM department AS d
    -> LEFT JOIN employee AS e
    ->     ON d.department_id = e.department_id
    -> GROUP BY d.department_name;
+------------------+----------------+
| department_name  | count_employee |
+------------------+----------------+
| Administration   |              3 |
| Human Resourcse  |              0 |
| IT               |              6 |
| Marketing        |              0 |
| Public Relations |              0 |
| Purchasing       |              1 |
| Sales            |              3 |
| Shipping         |              0 |
+------------------+----------------+
8 rows in set (0.00 sec)


10.Write a query to get the number of jobs available in the employees table

mysql> select count(job_id) as "Isavalible job"
    -> from employee;
+----------------+
| Isavalible job |
+----------------+
|             13 |
+----------------+
1 row in set (0.00 sec)


11.Write a query to select first 10 records from a table.

mysql> SELECT *
    -> FROM employee
    -> LIMIT 10;
+-------------+------------+-----------+---------------+--------------+------------+---------+--------+------------+------------+---------------+
| employee_id | first_name | last_name | email         | phone_number | hire_date  | job_id  | salary | commission | manager_id | department_id |
+-------------+------------+-----------+---------------+--------------+------------+---------+--------+------------+------------+---------------+
|         100 | Steven     | King      | NOT AVAILABLE | 515.123.4567 | 1987-06-17 | AD_PRES |  26400 |    5140.00 |        200 |            10 |
|         101 | Neena      | Kochhar   | NOT AVAILABLE | 515.123.4568 | 1987-06-18 | AD_VP   |  18700 |    4370.00 |        200 |            10 |
|         102 | Lex        | De Haan   | NOT AVAILABLE | 515.123.4569 | 1987-06-19 | AD_VP   |  18700 |    1970.00 |        200 |            10 |
|         103 | Alexander  | Hunold    | NOT AVAILABLE | 590.423.4567 | 1987-06-20 | IT_PROG |   9900 |    1090.00 |        103 |            60 |
|         104 | Bruce      | Ernst     | NOT AVAILABLE | 590.423.4568 | 1987-06-21 | IT_PROG |   6600 |    5160.00 |        103 |            60 |
|         105 | David      | Austin    | NOT AVAILABLE | 590.423.4569 | 1987-06-22 | IT_PROG |   5280 |     628.00 |        103 |            60 |
|         106 | Valli      | Pataballa | NOT AVAILABLE | 590.423.4560 | 1987-06-23 | IT_PROG |   5280 |    5028.00 |        103 |            60 |
|         107 | Diana      | Lorentz   | NOT AVAILABLE | 590.423.5567 | 1987-06-24 | IT_PROG |   4620 |     562.00 |        114 |            30 |
|         108 | Nancy      | Greenberg | NOT AVAILABLE | 515.124.4569 | 1987-06-25 | SA_MAN  |  13200 |    1420.00 |        145 |            80 |
|         109 | Daniel     | Faviet    | NOT AVAILABLE | 515.124.4169 | 1987-06-26 | SA_MAN  |   9900 |    3490.00 |        145 |            80 |
+-------------+------------+-----------+---------------+--------------+------------+---------+--------+------------+------------+---------------+
10 rows in set (0.00 sec)


12.Write a query to display the name (first_name, last_name) and salary for
all employees whose salary is not in the range $10,000 through $15,000

mysql> SELECT first_name,
    ->        last_name,
    ->        salary
    -> FROM employee
    -> WHERE salary NOT BETWEEN 10000 AND 15000;
+------------+-----------+--------+
| first_name | last_name | salary |
+------------+-----------+--------+
| Steven     | King      |  26400 |
| Neena      | Kochhar   |  18700 |
| Lex        | De Haan   |  18700 |
| Alexander  | Hunold    |   9900 |
| Bruce      | Ernst     |   6600 |
| David      | Austin    |   5280 |
| Valli      | Pataballa |   5280 |
| Diana      | Lorentz   |   4620 |
| Daniel     | Faviet    |   9900 |
| Raju       | Nalbalwar |  29700 |
| Rutika     | Vaidya    |  25300 |
| Akki       | Swami     |  27500 |
+------------+-----------+--------+
12 rows in set (0.00 sec)


13.Write a query to display the name (first_name, last_name) and
department ID of all employees in departments 30 or 100 in ascending
order.

mysql> SELECT first_name,last_name, hire_date
    -> from employee
    -> where year(hire_date) = '1987';
+------------+-----------+------------+
| first_name | last_name | hire_date  |
+------------+-----------+------------+
| Steven     | King      | 1987-06-17 |
| Neena      | Kochhar   | 1987-06-18 |
| Lex        | De Haan   | 1987-06-19 |
| Alexander  | Hunold    | 1987-06-20 |
| Bruce      | Ernst     | 1987-06-21 |
| David      | Austin    | 1987-06-22 |
| Valli      | Pataballa | 1987-06-23 |
| Diana      | Lorentz   | 1987-06-24 |
| Nancy      | Greenberg | 1987-06-25 |
| Daniel     | Faviet    | 1987-06-26 |
+------------+-----------+------------+
10 rows in set (0.01 sec)


14.Write a query to display the name (first_name, last_name) and salary for
all employees whose salary is not in the range $10,000 through $15,000
and are in department 30 or 100.


mysql> SELECT first_name,
    ->        last_name,
    ->        salary
    -> FROM employee
    -> WHERE salary NOT BETWEEN 10000 AND 15000
    ->   AND department_id IN (30, 100);
+------------+-----------+--------+
| first_name | last_name | salary |
+------------+-----------+--------+
| Diana      | Lorentz   |   4620 |
+------------+-----------+--------+
1 row in set (0.00 sec)



15.Write a query to display the name (first_name, last_name) and hire date
for all employees who were hired in 1987.

mysql> SELECT first_name,last_name, hire_date
    -> from employee
    -> where year(hire_date) = '1987';
+------------+-----------+------------+
| first_name | last_name | hire_date  |
+------------+-----------+------------+
| Steven     | King      | 1987-06-17 |
| Neena      | Kochhar   | 1987-06-18 |
| Lex        | De Haan   | 1987-06-19 |
| Alexander  | Hunold    | 1987-06-20 |
| Bruce      | Ernst     | 1987-06-21 |
| David      | Austin    | 1987-06-22 |
| Valli      | Pataballa | 1987-06-23 |
| Diana      | Lorentz   | 1987-06-24 |
| Nancy      | Greenberg | 1987-06-25 |
| Daniel     | Faviet    | 1987-06-26 |
+------------+-----------+------------+
10 rows in set (0.01 sec)


16.Write a query to display the first_name of all employees who have both
"b" and "c" in their first name

mysql> SELECT first_name
    -> FROM employee
    -> WHERE first_name LIKE '%b%c%';
+------------+
| first_name |
+------------+
| Bruce      |
+------------+
1 row in set (0.00 sec)


17.Write a query to display the last name, job, and salary for all employees
whose job is that of a Programmer or a Shipping Clerk, and whose salary
is not equal to $4,500, $10,000, or $15,000.

mysql> SELECT last_name,
    ->        job_id,
    ->        salary
    -> FROM employee
    -> WHERE job_id IN ('Programmer', 'Shipping Clerk')
    ->   AND salary NOT IN (4500, 10000, 15000);
Empty set (0.00 sec)


18.Write a query to display the last name of employees whose names have
exactly 6 characters.


mysql>  select last_name
    -> from employee
    -> WHERE CHAR_LENGTH(first_name) = 6;
+-----------+
| last_name |
+-----------+
| King      |
| Faviet    |
| Vaidya    |
+-----------+
3 rows in set (0.00 sec)


19.Write a query to display the last name of employees having 'e' as the third
character.

mysql> select last_name
    -> from employee
    -> where last_name LIKE "%e__";
+-----------+
| last_name |
+-----------+
| Greenberg |
+-----------+
1 row in set (0.00 sec)


20.Write a query to display the jobs/designations available in the employees
table.

mysql> select  DISTINCT job_id
    -> from employee;
+---------+
| job_id  |
+---------+
| AD_PRES |
| AD_VP   |
| IT_PROG |
| SA_MAN  |
+---------+
4 rows in set (0.00 sec)


21.Write a query to select all record from employees where last name in
'BLAKE', 'SCOTT', 'KING' and 'FORD'

mysql> SELECT * FROM employee
    -> where last_name in ('BLAKE','SCOTT','KING','FORD');
+-------------+------------+-----------+---------------+--------------+------------+---------+--------+------------+------------+---------------+
| employee_id | first_name | last_name | email         | phone_number | hire_date  | job_id  | salary | commission | manager_id | department_id |
+-------------+------------+-----------+---------------+--------------+------------+---------+--------+------------+------------+---------------+
|         100 | Steven     | King      | NOT AVAILABLE | 515.123.4567 | 1987-06-17 | AD_PRES |  26400 |    5140.00 |        200 |            10 |
+-------------+------------+-----------+---------------+--------------+------------+---------+--------+------------+------------+---------------+
1 row in set (0.00 sec)


